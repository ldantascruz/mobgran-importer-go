basePath: /
definitions:
  models.AuthResponse:
    properties:
      expires_at:
        type: string
      refresh_token:
        type: string
      token:
        type: string
      trader:
        $ref: '#/definitions/models.TraderResponse'
    type: object
  models.EstatisticasProdutos:
    properties:
      cavaletes_disponiveis:
        type: integer
      produtos_destaque:
        type: integer
      produtos_visiveis:
        type: integer
      total_produtos:
        type: integer
    type: object
  models.ImportRequest:
    properties:
      atualizar_existente:
        type: boolean
      url:
        type: string
    required:
    - url
    type: object
  models.ImportResponse:
    properties:
      mensagem:
        type: string
      oferta_id:
        type: string
      sucesso:
        type: boolean
      uuid_link:
        type: string
    type: object
  models.ProdutoAprovado:
    properties:
      cavalete_id:
        type: string
      created_at:
        type: string
      descricao:
        type: string
      destaque:
        type: boolean
      id:
        type: string
      nome_customizado:
        maxLength: 255
        minLength: 1
        type: string
      ordem_exibicao:
        type: integer
      preco_venda:
        type: number
      trader_id:
        type: string
      updated_at:
        type: string
      visivel:
        type: boolean
    required:
    - nome_customizado
    - preco_venda
    type: object
  models.ProdutoAprovarRequest:
    properties:
      cavalete_id:
        type: string
      descricao:
        type: string
      destaque:
        type: boolean
      nome_customizado:
        maxLength: 255
        minLength: 1
        type: string
      preco_venda:
        type: number
      visivel:
        type: boolean
    required:
    - cavalete_id
    - nome_customizado
    - preco_venda
    type: object
  models.ProdutoAtualizarRequest:
    properties:
      descricao:
        type: string
      destaque:
        type: boolean
      nome_customizado:
        maxLength: 255
        minLength: 1
        type: string
      ordem_exibicao:
        type: integer
      preco_venda:
        type: number
      visivel:
        type: boolean
    type: object
  models.TraderAtualizar:
    properties:
      empresa:
        type: string
      nome:
        maxLength: 255
        minLength: 2
        type: string
      telefone:
        type: string
    type: object
  models.TraderLogin:
    properties:
      email:
        type: string
      senha:
        type: string
    required:
    - email
    - senha
    type: object
  models.TraderRegistro:
    properties:
      email:
        type: string
      empresa:
        type: string
      nome:
        maxLength: 255
        minLength: 2
        type: string
      senha:
        maxLength: 100
        minLength: 6
        type: string
      telefone:
        type: string
    required:
    - email
    - nome
    - senha
    type: object
  models.TraderResponse:
    properties:
      ativo:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      email_verificado:
        type: boolean
      empresa:
        type: string
      id:
        type: string
      nome:
        type: string
      telefone:
        type: string
      ultimo_login:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API para importação de ofertas do Mobgran para Supabase
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Mobgran Importer API
  version: "1.0"
paths:
  /api/extrair-uuid:
    post:
      consumes:
      - application/json
      description: Extrai o UUID de uma URL do Mobgran
      parameters:
      - description: URL para extrair UUID
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Extrai UUID da URL
      tags:
      - utilidades
  /api/importar:
    post:
      consumes:
      - application/json
      description: Importa dados de uma oferta do Mobgran para o Supabase
      parameters:
      - description: Dados da importação
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ImportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ImportResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ImportResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ImportResponse'
      summary: Importa uma oferta do Mobgran
      tags:
      - importacao
  /api/validar-url:
    post:
      consumes:
      - application/json
      description: Valida se uma URL é um link válido do Mobgran
      parameters:
      - description: URL para validar
        in: body
        name: request
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Valida URL do Mobgran
      tags:
      - validacao
  /auth/login:
    post:
      consumes:
      - application/json
      description: Autentica um trader no sistema
      parameters:
      - description: Credenciais do trader
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.TraderLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Login do trader
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Faz logout do trader (revoga refresh token)
      parameters:
      - description: Refresh token
        in: body
        name: refresh
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Logout
      tags:
      - auth
  /auth/perfil:
    get:
      description: Obtém o perfil do trader autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TraderResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Perfil do trader
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: Atualiza o perfil do trader autenticado
      parameters:
      - description: Dados para atualização
        in: body
        name: trader
        required: true
        schema:
          $ref: '#/definitions/models.TraderAtualizar'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TraderResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Atualizar perfil
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Renova o token de acesso usando o refresh token
      parameters:
      - description: Refresh token
        in: body
        name: refresh
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Refresh token
      tags:
      - auth
  /auth/registrar:
    post:
      consumes:
      - application/json
      description: Registra um novo trader no sistema
      parameters:
      - description: Dados do trader
        in: body
        name: trader
        required: true
        schema:
          $ref: '#/definitions/models.TraderRegistro'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Registrar novo trader
      tags:
      - auth
  /health:
    get:
      description: Verifica se a aplicação está funcionando
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Health check
      tags:
      - health
  /produtos/{id}:
    delete:
      description: Remove um produto aprovado
      parameters:
      - description: ID do produto
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Remover produto
      tags:
      - produtos
    get:
      description: Busca um produto específico do trader
      parameters:
      - description: ID do produto
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProdutoAprovado'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Buscar produto
      tags:
      - produtos
    put:
      consumes:
      - application/json
      description: Atualiza um produto aprovado
      parameters:
      - description: ID do produto
        in: path
        name: id
        required: true
        type: string
      - description: Dados para atualização
        in: body
        name: produto
        required: true
        schema:
          $ref: '#/definitions/models.ProdutoAtualizarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProdutoAprovado'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Atualizar produto
      tags:
      - produtos
  /produtos/aprovados:
    get:
      description: Lista produtos aprovados pelo trader
      parameters:
      - default: 20
        description: Limite de resultados
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset para paginação
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Listar produtos aprovados
      tags:
      - produtos
  /produtos/aprovar:
    post:
      consumes:
      - application/json
      description: Aprova um cavalete como produto para venda
      parameters:
      - description: Dados do produto
        in: body
        name: produto
        required: true
        schema:
          $ref: '#/definitions/models.ProdutoAprovarRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ProdutoAprovado'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Aprovar produto
      tags:
      - produtos
  /produtos/cavaletes:
    get:
      description: Lista cavaletes disponíveis para aprovação pelo trader
      parameters:
      - default: 20
        description: Limite de resultados
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset para paginação
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Listar cavaletes disponíveis
      tags:
      - produtos
  /produtos/estatisticas:
    get:
      description: Obtém estatísticas dos produtos do trader
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EstatisticasProdutos'
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Estatísticas de produtos
      tags:
      - produtos
  /vitrine/publica:
    get:
      description: Lista produtos na vitrine pública (não requer autenticação)
      parameters:
      - default: 20
        description: Limite de resultados
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset para paginação
        in: query
        name: offset
        type: integer
      - description: Filtrar por trader específico
        in: query
        name: trader_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Vitrine pública
      tags:
      - produtos
schemes:
- http
- https
swagger: "2.0"
